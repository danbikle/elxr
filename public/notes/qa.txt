~/elxr/public/notes/qa.txt

This file contains questions and some answers about Elixir.

q: Why is Elixir a "functional" language?

q: What is a "functional" language?

q: Why is mutability of data structures an important topic?

q: How to run an Elixir script?

q: Can I do Linear Regression with Elixir?

q: How to connect Elixir to Postgres?

q: How to pass messages between two Elixir processes?

q: What is the diff tween Elixir 1.6 and 1.8?

q: When I work with Elixir, how visible is Erlang?

q: What is the macro system in Elixir.

q: Why does Dave T call it: "hygienic macro system"?

q: How can I demo compile and runtime evaluation?

q: Dave T mentions "tools" and "conventions" for Elixir; what are they?

q: How to demo a script which uses all cores on my host?

q: How to demo a script which uses many hosts?

q: What is OTP?

q: How to do code generation with Elixir?

q: What is an OTP application?

q: How to operate the debugger?

q: What is the code formatter?

q: What is: "Distillery"?

q: What are Elixir protocols?

q: Where is the Errata page?
a: http://oreilly.com/catalog/9781680502992/errata

q: Does the book have a repo or zip file full of examples?

q: Who is Corey Haines?

q: What are some good online resources?

q: What is the Elixir connectivity framework? Is it Phoenix?

q: Does Phoenix have this connectivity framework?

q: What is the "Nerves Project"?

q: What is embedded Elixir code?

q: What is an example of a Linux based microcontroller?

q: What online Elixir course has Dave T written?
a: https://codestool.coding-gnome.com/courses/elixir-for-programmers

q: Does it make sense for me to learn Erlang and operation of its VM?

q: Is functional programming synonymous with immutable state of my
   data structures or are these features separate?

q: Is knowledge of pipes in Bash useful?
a: Yes, Elixir embraces the idea of transforming data with pipelines.

q: How do I run this:
defmodule Parallel do
  def pmap(collection, func) do
    collection
    |> Enum.map(&(Task.async(fn -> func.(&1) end)))
    |> Enum.map(&Task.await/1)
  end
end

result = Parallel.pmap 1..1000, &(&1 ​*​ &1)

??

q: Can I put it in a script: dan.exs and do elixir dan.exs?
a: I think, yes:

dan@h78:~/elxr/public/notes $ elixir -h
Usage: elixir [options] [.exs file] [data]

elixir pmap1.exs
** (SyntaxError) pmap1.exs:18: unexpected token: "​" (column 38, codepoint U+200B)
    (elixir) lib/code.ex:767: Code.require_file/2
dan@h78:~/elxr/public/notes $ 
dan@h78:~/elxr/public/notes $ 
dan@h78:~/elxr/public/notes $

q: How to debug that?

q: How to print something?
a: 

q: In Elixir what does this operator
   |>
   do ?

q: What does it mean to ignore a value with underscore _ ?

q: How to do pattern matching?

q: Why is pattern matching important?

q: Variables bind once (per match) means what?

q: How do I look at the equal sign another way?

q: What is a built-in type?

q: What is a value type?

q: What is a system type?

q: What is a Collection type?

q: What are Maps?

q: What are Binaries?

q: What is a Name?

q: What is a source file and how to use it?

q: What is an anonymous function and how to create one?

q: Why are Functions and Pattern matching an important topic?

q: One Function , Multiple Bodies means what?

q: How to return a function from a function?

q: How to pass a function as an argument?

q: In Elixir, what is a String?
a: It is a UTF-8 encoded binary.

q: What is a Codepoint?
a: According to UTF-8 standard, a codepoint is a single Unicode
   character which is either 1 byte or 2.

q: How to get the size of a codepoint?
a: demo: byte_size "A"
         byte_size "á"
	 
q: What is a grapheme?

q: What is a grapheme cluster?




