%h1 Lesson 001 [ Install Elixir ]

%h2 Use Ubuntu

%p I recommend that you use Ubuntu 18.04 for both training and development.

%p Typically on Ubuntu I use a short account name like ann or dan.

%p On some of my other websites I run demos from the ann account.

%p On this site, the account name is often unstated because account name is not very important when you learn Elixir.

%p Ubuntu 18.04 will offer you a stable and consistent experience until 2023 or perhaps 2024.

%p I cannot say the same about Windows or Mac.

%p The product managers of Windows and Mac are motivated to frequently change the behavior of both the underlying OS and the UI on top of the OS.

%p Over the years after I became comfortable with some feature(s) of windows or Mac, it seemed that the feature(s) would change or disappear.

%p One attribute which seems consistent for each platform is that setting up a Development environment is usually a chore.

%p For me, setting up a Development environment on Ubuntu (10.04 onwards) has always been done with a simple set of Bash commands.

%p And, once I know those commands, they stay valid for years.

%p Now I avoid windows and Mac if possible.

%p Another fact to keep in mind is that after you become skilled at building Elixir applications, you will probably deploy them to a cluster of Linux hosts.

%p If you choose to use Ubuntu 18.04 hosts, then your development environment will be very similar to your production environment.

%p If code runs on your laptop, it should run in Production.

%p I installed Elixir on Ubuntu 18.04.

%p It was easy.

%p I issued some Bash commands to do it:

.syntax
  %pre
    =render 'lesson001a_install'

%p If you want to install Elixir on Mac or windows, ask google; I don't know how.

%p After I installed Elixir, I checked the version with a Bash command:

.syntax
  %pre
    %code elixir -v

%hr/
%h2 .exs scripts

%p In my Desktop folder I wrote a script:

.syntax
  %pre
    %code # demo10.exs
    %code IO.puts "hello world"

%p I ran it and saw this:
.syntax
  %pre
    %code
      dan@h78:~/Desktop $ elixir demo10.exs 
      hello world
      dan@h78:~/Desktop $ 

%p Elixir is often called a "Functional Language" which means, in a simple sense, that functions are important.

%p I wrote a script with two functions inside one module:

.syntax
  %pre
    =render 'lesson001b_demo11'

%p When I write Elixir scripts, I often put my functions in a module; you should too.

%p I ran the script and saw this:
.syntax
  %pre
    =render 'lesson001c_demo11'
    