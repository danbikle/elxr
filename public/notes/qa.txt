~/elxr/public/notes/qa.txt

This file contains questions and some answers about Elixir.

q: The elixir command allows elixir -r file my.exs which means that
   I "Require" given files/patterns
   What does this mean?
   Why would I "Require" a file?
   The help says I can give -r file more than once; how to?

q: I am allowed: elixir -S SCRIPT
   which: "Finds and executes the given script in PATH"
   Is PATH the same as PATH in Bash?

q: I am allowed: elixir -pr file
   which: "Requires the given files/patterns in parallel"
   What does this mean? Why would I do it?
   
q: I am allowed: elixir -pa path
   which: "Prepends the given path to Erlang code path.
   What does this mean? Why would I do it?
   Can I do this with an env variable?
   How to list Erlang code path?

q: I am allowed: elixir --app APP
   which: "Starts the given app and its dependencies"
   What is an app?
   How to CCLUD an app?

q: I am allowed: elixir --cookie COOKIE
   which: Sets a cookie for this distributed node
   What is a cookie?
   How to CCLUD a cookie?

q: I am allowed: elixir --hidden
   which: "Makes a hidden node"
   What is a hidden node?
   Why I want a hidden node?

q: I am allowed: elixir --logger-otp-reports BOOL
   which: Enables or disables OTP reporting
   What is OTP reporting?
   Why do I want it?
   How to see and delete the reports?


q: I am allowed: elixir --logger-sasl-reports BOOL
   which: Enables or disables SASL reporting
   What is SASL?
   What is its reporting?


q: I am allowed: elixir --name NAME
   which: Makes and assigns a name to the distributed node
   Why do I want a name?
   How to list all the names on all the nodes?


q: I am allowed: elixir --sname NAME
   which: Makes and assigns a short name to the distributed node
   Is this better than assigning a plain-name (which is probably longer)?
   Can a node have both a long-name and a short-name?
   Is it possible to have a name collision which causes problems?
   
q: Why is Elixir a "functional" language?
a: In Elixir, functions are important.

q: What is a "functional" language?
a: It is a language which ensures that functions are important.

q: Why is mutability of data structures an important topic?
a: Mutable structures lead me into a world of trouble.
   If I am tempted to mutate a structure, I should instead transform a copy of it.
   
q: How to run an Elixir script?
a: I start with elixir -h
   Which leads me to the simplest example:
   elixer myscript.exs
   
q: Can I do Linear Regression with Elixir?

q: How to connect Elixir to Postgres?

q: How to pass messages between two Elixir processes?

q: What is the diff tween Elixir 1.6 and 1.8?

q: When I work with Elixir, how visible is Erlang?

q: What is the macro system in Elixir.

q: Why does Dave T call it: "hygienic macro system"?

q: How can I demo compile and runtime evaluation?

q: Dave T mentions "tools" and "conventions" for Elixir; what are they?

q: How to demo a script which uses all cores on my host?

q: How to demo a script which uses many hosts?

q: What is OTP?

q: How to do code generation with Elixir?

q: What is an OTP application?

q: How to operate the debugger?

q: What is the code formatter?

q: What is: "Distillery"?

q: What are Elixir protocols?

q: Where is the Errata page?
a: http://oreilly.com/catalog/9781680502992/errata

q: Does the book have a repo or zip file full of examples?

q: Who is Corey Haines?

q: What are some good online resources?

q: What is the Elixir connectivity framework? Is it Phoenix?

q: Does Phoenix have this connectivity framework?

q: What is the "Nerves Project"?

q: What is embedded Elixir code?

q: What is an example of a Linux based microcontroller?

q: What online Elixir course has Dave T written?
a: https://codestool.coding-gnome.com/courses/elixir-for-programmers

q: Does it make sense for me to learn Erlang and operation of its VM?

q: Is functional programming synonymous with immutable state of my
   data structures or are these features separate?

q: Is knowledge of pipes in Bash useful?
a: Yes, Elixir embraces the idea of transforming data with pipelines.

q: How do I run this:
defmodule Parallel do
  def pmap(collection, func) do
    collection
    |> Enum.map(&(Task.async(fn -> func.(&1) end)))
    |> Enum.map(&Task.await/1)
  end
end

result = Parallel.pmap 1..1000, &(&1 ​*​ &1)

??

q: Can I put it in a script: dan.exs and do elixir dan.exs?
a: I think, yes:

dan@h78:~/elxr/public/notes $ elixir -h
Usage: elixir [options] [.exs file] [data]

elixir pmap1.exs
** (SyntaxError) pmap1.exs:18: unexpected token: "​" (column 38, codepoint U+200B)
    (elixir) lib/code.ex:767: Code.require_file/2
dan@h78:~/elxr/public/notes $ 
dan@h78:~/elxr/public/notes $ 
dan@h78:~/elxr/public/notes $

q: How to debug that?

q: How to print something?
a: 

q: In Elixir what does this operator
   |>
   do ?

q: What does it mean to ignore a value with underscore _ ?

q: How to do pattern matching?

q: Why is pattern matching important?

q: Variables bind once (per match) means what?

q: How do I look at the equal sign another way?

q: What is a built-in type?

q: What is a value type?

q: What is a system type?

q: What is a Collection type?

q: What are Maps?

q: What are Binaries?

q: What is a Name?

q: What is a source file and how to use it?

q: What is an anonymous function and how to create one?

q: Why are Functions and Pattern matching an important topic?

q: One Function , Multiple Bodies means what?

q: How to return a function from a function?

q: How to pass a function as an argument?

q: In Elixir, what is a String?
a: It is a UTF-8 encoded binary.

q: What is a Codepoint?
a: According to UTF-8 standard, a codepoint is a single Unicode
   character which is either 1 byte or 2.

q: How to get the size of a codepoint?
a: demo: byte_size "A"
         byte_size "á"

q: How does a String measure the length of a codepoint?
q: Both a 1 byte codepoint and 2 byte codepoint have a length of 1.
   This makes sense I'd look at it and say, that is only one letter.
   demo:
   String.length "á"
   
q: What is a grapheme?
a: Typically grapheme is plural: graphemes, and is an idea in Unicode.

q: What is a grapheme cluster?
a: It is the singular name of graphemes?

q: What is a synonym for grapheme cluster?
a: graphemes

q: What are graphemes?
a: A human might perceive them as a single character.
   Elixir can do this too with the graphemes/1 function.
   To demo this I start with two codepoints:
   cp0_s = "\u0065"
   byte_size cp0_s
   cp1_s = "\u0301"
   byte_size cp1_s
   string_s = "\u0065\u0301"
   String.codepoints string_s
   String.graphemes string_s
   So, graphemes is both an idea and name of a function.
   The idea is that a letter can be made from 1 or more pieces and the brain wants to combine them.
   The graphemes/1 function is used by Elixir to mimic this and present 1 or more codepoints into a human readable letter.

q: What can I do with the :unicode module?
a: I can convert a binary to a different encoding.

q: What are some popular encodings?

q: What is a Unicode normalization mechanism?
a: 

q: What is a function which runs in linear time?
a: Its duration depends linearly on length of input.
   String.length/1 is linear
   Kernel.byte_size/1 is constant
   
q: Why might I want to avoid the String module?
a: It is slow.

Here is a demo of some slow syntax which is used to remove a prefix from a string:


take_prefix = fn full, prefix ->
  base = String.length(prefix)
  String.slice(full, base, String.length(full) - base)
end
take_prefix.("Mr. John", "Mr. ")

q: How to declare a function?
a: Here is a simple demo:
mysq = fn mynm ->
  mynm * mynm
end

mysq.(3.3)

q: Why does this fail:
   mysql 3.3
   ??


q: What does this syntax do:
String.slice("hellohello", 4..-1)
a:
iex(9)> String.slice("hellohello", 4..-1)
"ohello"
iex(10)>

It slices off the first 4 characters.

q: What does this syntax do:
String.slice("hellohello", 4)
a: It gives error bc it expects something like this:
String.slice("hellohello", first..last)
I tried this:
iex(10)> String.slice("hellohello", 3..6)
"lohe"
iex(11)>

I tried this:
iex(11)> String.slice("hellohello", 3..)
** (SyntaxError) iex:11: syntax error before: ')'

iex(11)>


I tried this:
iex(11)> String.slice("hellohello", 6..3)
""
iex(12)>

I tired this:
iex(12)> String.slice("hellohello", 3..3)
"l"
iex(13)> 



q: What does this code do:
    iex> take_prefix = fn full, prefix ->
    ...>   base = byte_size(prefix)
    ...>   binary_part(full, base, byte_size(full) - base)
    ...> end
    iex> take_prefix.("Mr. John", "Mr. ")

a:
    "John"
    I looked at some pieces:
    prefix = "Mr. "
    full   = "Mr. John"
    base   = byte_size(prefix) # sb 4
    byte_size(full) # sb 8
    binary_part("Mr. John", 4 , 8 - 4)
    

iex(17)> binary_part("Mr. John", 4 , 8 - 4)
"John"
iex(18)>
It worked!

h binary_part gives me some english logic:
Extracts the part of the binary starting at start with length length.

A negative length can be used to extract bytes that come before the byte at
start:

    iex> binary_part("Hello", 5, -3)
    "llo"
This makes sense.
